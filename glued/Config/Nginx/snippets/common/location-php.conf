# pass PHP scripts to FastCGI server

location ~ \.php$ {
    fastcgi_pass_request_headers on;
    fastcgi_pass_header Authorization;
    fastcgi_param HTTP_AUTHORIZATION $http_authorization;
    fastcgi_param HTTP_X-REQUEST_ID $request_id;
    fastcgi_param HTTP_X-REAL-IP $remote_addr;
    fastcgi_param HTTP_X-FORWARDED-FOR $proxy_add_x_forwarded_for;
    fastcgi_param HTTP_X-ORIGINAL-URI  $request_uri;
    fastcgi_param HTTP_X-ORIGINAL-METHOD $request_method;

    # Authentication and authorization transparency is provided by passing the auth subrequest
    # results to underlying backends as http headers. Note that this is handled differently on
    # the auth reverse proxy itself (glued-core), which has $glued*, $sent* variables set,
    # whereas the upstream workers (glued-xxxxx) will have solely the $http* variables set.
    # The configuration below just correctly concatenates strings so that it applies to both
    # proxy and workers equally. This also requires to replace `-` to `_` in header names,
    # because on upstream, the nginx-php interaction differs.

    # http_x_* are the current http request headers
    # sent_http_x_* are the upstream response headers (in case of core, upstream is the auth subrequest)
    # glued variables are set in the auth-subrequest.conf snippet

    fastcgi_param HTTP_X_GLUED_AUTH_INVOKED $glued_auth_invoked$http_x_glued_auth_invoked;
    fastcgi_param HTTP_X_GLUED_AUTH_STATUS $http_x_glued_auth_status$glued_auth_status;
    fastcgi_param HTTP_X_GLUED_AUTH_UUID $sent_http_x_glued_auth_uuid$http_x_glued_auth_uuid;
    fastcgi_param HTTP_X_GLUED_MESSAGE $sent_http_x_glued_message$http_x_glued_message;

    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
}


